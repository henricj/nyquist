<html><head><title>XLISP keywordp</title>

<link rel="stylesheet" type="text/css" href="reference.css">

</head>

<body>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

<hr>

<h1>keywordp</h1>

<hr>

<p><table cellpadding="0" cellspacing="0" style="margin-left:10px"><tbody>
<tr valign="top">
  <td><nobr>Type:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>Lisp function (closure)</nobr></td>
</tr>
<tr valign="top">
  <td><nobr>Source:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>sal-parse.lsp</nobr></td>
</tr>
</tbody></table></p>

<h2>Syntax</h2>

<p><div class="box">

<dl>
<dt><nobr>(keywordp <i>expr</i>)</nobr></dt>
<dd><i>expr</i> - an arbitrary Lisp expression<br>
returns - <a href="t.htm">&nbsp;T&nbsp;</a> if the expression is a keyword symbol, <a href="nil.htm">NIL</a> otherwise</dd>
</dl>

</div></p>

<pre class="example">
(defun <font color="#0000CC">keywordp</font> (s)
  (and (symbolp s)
       (eq (type-of (symbol-name s)) 'string)
       (equal (char (symbol-name s) 0) #\:)))
</pre>

<h2>Description</h2>

<p>The 'keywordp' function tests if a lisp expression is a keyword symbol.</p>

<h2>Examples</h2>

<pre class="example">
(keywordp :a)   =&gt; T
(keywordp :B)   =&gt; T
(keywordp 'c)   =&gt; NIL
(keywordp "d")  =&gt; NIL
(keywordp #\e)  =&gt; NIL
(keywordp 123)  =&gt; NIL
</pre>

<p><nobr>&nbsp;&nbsp;<a href="#top">Back to Top</nobr></a></p>

<hr>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

</body></html>