<html><head><title>XLISP boundp</title>

<link rel="stylesheet" type="text/css" href="reference.css">

</head>

<body>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

<hr>

<h1>boundp</h1>

<hr>

<p><table cellpadding="0" cellspacing="0" style="margin-left:10px"><tbody>
<tr valign="top">
  <td><nobr>Type:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>predicate function (subr)</nobr></td>
</tr>
<tr valign="top">
  <td><nobr>Source:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>xlbfun.c</nobr></td>
</tr>
</tbody></table></p>

<h2>Syntax</h2>

<p><div class="box">

<dl>
<dt>(<b>boundp</b> <i>symbol</i>)</dt>
<dd><i>symbol</i> - a symbol expression<br>
returns - <a href="t.htm">&nbsp;T&nbsp;</a> if a value is
bound to the symbol, <a href="nil.htm">NIL</a> otherwise</dd>
</dl>

</div></p>

<h2>Description</h2>

<p>The 'boundp' predicate function tests if 'symbol' evaluates to a symbol
in <nobr>the <a href="global-obarray.htm">*obarray*</a></nobr> with a value
bound to it. <nobr><a href="t.htm">&nbsp;T&nbsp;</a> is</nobr> returned if
'symbol' has a value, <a href="nil.htm">NIL</a> is returned otherwise. Note
that 'boundp' does not test if local <a href="let.htm">let</a> variables, or
class or instance variables exist.</p>

<h2>Examples</h2>

<pre class="example">
(setq a 1)            =&gt; 1    <font color="#008844">; create a variable A in the *OBARRAY*</font>
(boundp 'a)           =&gt; T    <font color="#008844">; variable A has a value 1</font>

(let ((b 'value))
  (boundp b))         =&gt; NIL  <font color="#008844">; BOUNDP does NOT test LET bindings</font>

(defun foo (x)                <font color="#008844">; create a function FOO in the *OBARRAY*</font>
  (print x))          =&gt; FOO

(boundp 'foo)         =&gt; NIL  <font color="#008844">; FOO is not a variable</font>

(print myvar)         =&gt; <font color="#AA0000">error: unbound variable - MYVAR</font>
(boundp 'myvar)       =&gt; NIL

(setq myvar 'abc)             <font color="#008844">; give MYVAR a value</font>
(boundp 'myvar)       =&gt; T
</pre>

<p>Note that 'symbol' is a symbol expression. This means that 'symbol' is
evaluated and the return value is tested:</p>

<pre class="example">
(setq myvar 'qq)              <font color="#008844">; MYVAR evaluates to QQ</font>
(boundp myvar)        =&gt; NIL  <font color="#008844">; but QQ has no value yet</font>

(setq qq 'new-value)          <font color="#008844">; give QQ a value</font>
(boundp myvar)        =&gt; T
</pre>

<p>See also:</p>

<ul>
<li><nobr>Contents &rarr; <a href="../manual/contents.htm#predicate-functions">Predicate Functions</a></nobr></li>
</ul>

<p><nobr>&nbsp;&nbsp;<a href="#top">Back to Top</nobr></a></p>

<hr>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

</body></html>