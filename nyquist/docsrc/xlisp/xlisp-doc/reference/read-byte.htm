<html><head><title>XLISP read-byte</title>

<link rel="stylesheet" type="text/css" href="reference.css">

</head>

<body>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

<hr>

<h1>read-byte</h1>

<hr>

<p><table cellpadding="0" cellspacing="0" style="margin-left:10px"><tbody>
<tr valign="top">
  <td><nobr>Type:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>function (subr)</nobr></td>
</tr>
<tr valign="top">
  <td><nobr>Source:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>xlfio.c</nobr></td>
</tr>
</tbody></table></p>

<h2>Syntax</h2>

<dl>
<dt>(read-byte [<i>source</i>])</dt>
<dd><i>source</i> - an optional source, must be a file pointer or stream,
default is <a href="global-standard-input.htm">*standard-input*</a><br>
returns - the byte as an integer</dd>
</dl>

<h2>Description</h2>

<p>The 'read-byte' function reads a single character from the specified
'source'. The character read is returned as an integer value for the result.
The 'source' may be a file pointer or a stream. If there is no 'source',
<a href="global-standard-input.htm">*standard-input*</a> is the default. If an
end-of-file is encountered in the 'source', then
<a href="nil.htm">NIL</a> will be returned as the result.</p>

<h2>Examples</h2>

<pre class="example">
(setq fp (open "f" :direction :output))  <font color="#008844">; set up file</font>
(print 12.34 fp)
(close fp)

(setq fp (open "f" :direction :input))   <font color="#008844">; now read the file</font>
(read-byte fp)                           <font color="#008844">; returns 49  - equals "1"</font>
(read-byte fp)                           <font color="#008844">; returns 50  - equals "2"</font>
(read-byte fp)                           <font color="#008844">; returns 46  - equals "."</font>
(read-byte fp)                           <font color="#008844">; returns 51  - equals "3"</font>
(read-byte fp)                           <font color="#008844">; returns 52  - equals "4"</font>
(read-byte fp)                           <font color="#008844">; returns 10  - equals "\n"</font>
(read-byte fp)                           <font color="#008844">; returns NIL - empty</font>
(close fp)
</pre>

<p><b>Common Lisp:</b> The XLISP and Common Lisp 'read-byte' functions are
compatible for simple cases. They both allow for the optional 'source'.
However, in Common Lisp, there are additional parameters which occur right
after 'source'. So, when porting from Common Lisp to XLISP, remember there
are additional arguments in Common Lisp's 'read-byte' function.</p>

<p><b>Common Lisp:</b> Common Lisp specifies that 'read' operations with a
'source' of <a href="nil.htm">NIL</a> will come from
<a href="global-standard-input.htm">*standard-input*</a>. XLISP does not read the
input from <a href="global-standard-input.htm">*standard-input*</a> with a
'source' of <a href="nil.htm">NIL</a>. Common Lisp also
specifies that a 'source' of <a href="t.htm">&nbsp;T&nbsp;</a>
will read from *terminal-io* which is not defined in XLISP by default. XLISP
does not allow <a href="t.htm">&nbsp;T&nbsp;</a> as a valid
argument for 'source'.</p>

<p>See the
<a href="../manual/xlisp-man-029.htm#read-byte">read-byte</a>
function in the <nobr>XLISP 2.0</nobr> manual.</p>

<p><nobr>&nbsp;&nbsp;<a href="#top">Back to Top</nobr></a></p>

<hr>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

</body></html>