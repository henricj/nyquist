<html><head><title>XLISP eq</title>

<link rel="stylesheet" type="text/css" href="reference.css">

</head>

<body>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

<hr>

<h1>eq</h1>

<hr>

<p><table cellpadding="0" cellspacing="0" style="margin-left:10px"><tbody>
<tr valign="top">
  <td><nobr>Type:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>predicate function (subr)</nobr></td>
</tr>
<tr valign="top">
  <td><nobr>Source:</nobr></td>
  <td><nobr>&nbsp;&nbsp;-&nbsp;&nbsp;</nobr></td>
  <td width="100%"><nobr>xllist.c, xlsubr.c</nobr></td>
</tr>
</tbody></table></p>

<h2>Syntax</h2>

<p><div class="box">

<dl>
<dt>(<b>eq</b> <i>expr1 expr2</i>)</dt>
<dd><i>exprN</i> - arbitrary Lisp expressions<br>
returns - <a href="t.htm">&nbsp;T&nbsp;</a> if the expressions
eveluate to the same internal value, <a href="nil.htm">NIL</a>
otherwise</dd>
</dl>

</div></p>

<h2>Description</h2>

<p>Two expressions are 'eq' if the expressions are identical. <nobr>The 'eq'
function</nobr> tests if the results of the evaluated expressions point to
the same memory location. <a href="t.htm">&nbsp;T&nbsp;</a> is returned if
both expressions evaluate to exactly the same internal value,
<a href="nil.htm">NIL</a> is returned otherwise.</p>

<p>Integer numbers being <a href="number-equal.htm">&nbsp;=&nbsp;</a> are
'eq' as long as not stored in a CPU register, so the
<a href="eql.htm">eql</a> function is recommended for testing integers. Also
note that arrays, <nobr>floating-point</nobr> numbers, lists, and strings
are only 'eq' if they are bound as variable values to the same symbol.</p>

<h2>Examples</h2>

<pre class="example">
(eq 'a 'a)          =&gt; T
(eq 1 1)            =&gt; T or NIL
(eq 1 1.0)          =&gt; NIL
(eq 1.0 1.0)        =&gt; NIL
(eq "a" "a")        =&gt; NIL
(eq '(a b) '(a b))  =&gt; NIL
(eq 'a 34)          =&gt; NIL

(setq a '(a b))     <font color="#008844">; set value of A to (A B)</font>
(setq b a)          <font color="#008844">; set B to point to A's value</font>
(setq c '(a b))     <font color="#008844">; set value of C to different (A B)</font>
(eq a b)            =&gt; T
(eq a c)            =&gt; NIL
</pre>

<p>See also <a href="eql.htm">eql</a>, <a href="equal.htm">equal</a>,
<nobr><a href="../examples/common-lisp/equalp.htm">cl:equalp</a></nobr>.</p>

<p><nobr>&nbsp;&nbsp;<a href="#top">Back to Top</nobr></a></p>

<hr>

<a href="../start.htm">Nyquist / XLISP 2.0</a>&nbsp; -&nbsp;
<a href="../manual/contents.htm">Contents</a> |
<a href="../tutorials/tutorials.htm">Tutorials</a> |
<a href="../examples/examples.htm">Examples</a> |
<a href="reference-index.htm">Reference</a>

</body></html>